[licensecheck]
flags = copyright
debian = licensecheck | devscripts (<< 2.16.6~)
command = licensecheck --check=. --recursive --copyright {cwd}
# TODO: is --check=. reasonable?

[suspicious-source]
# We need:
#   devscripts (<< 2.13.1~), python-magic
# or
#   devscripts (>= 2.13.1~), python3-magic
debian = devscripts, devscripts (>= 2.13.1~) | python-magic, devscripts (<< 2.13.1~) | python3-magic
command = suspicious-source

[licensecheck-generated-files]
debian = licensecheck | devscripts (<< 2.16.6~)
command = licensecheck --check=. --recursive --copyright {cwd} | grep -aF 'GENERATED FILE'

[licensecheck-incorrect-fsf-address]
debian = licensecheck | devscripts (<< 2.16.6~)
command = licensecheck --check=. --recursive --copyright {cwd} | grep -aF 'with incorrect FSF address'

[fdupes]
flags = fixme fixme-ignore
debian = fdupes
command = fdupes -q -r {cwd} | grep -vE '/(\.(git|svn|bzr|hg|sgdrawer|pc)|_(darcs|FOSSIL_)|CVS)(/|$)' | cat -s

[bitmap-gimp]
flags = images
comment = Check with upstream where the GIMP XCF source files are.
files = *.png *.gif *.jpg *.jpeg
types = image/*
command = grep -nHiF gimp {files}

[bitmap-inkscape]
flags = images
comment = Check with upstream where the Inkscape SVG source files are.
files = *.png *.gif *.jpg *.jpeg
types = image/*
command = grep -nHiF inkscape {files}

[bitmap-synfig]
flags = images
comment = Check with upstream where the Synfig SIF source files are.
files = *.png *.gif *.jpg *.jpeg
types = image/*
command = grep -nHi 'SINFG|SYNFIG' {files}

[bitmap-povray]
flags = images
comment = Check with upstream where the POV-Ray POV source files are.
files = *.png *.gif *.jpg *.jpeg
types = image/*
command = grep -nHiF 'POV-Ray' {files}

[bitmap-gnuplot]
flags = images
comment = Check with upstream where the gnuplot scripts are.
files = *.png *.gif *.jpg *.jpeg
types = image/*
command = grep -nHiF 'gnuplot' {files}

[bitmap-base64]
flags = images
files = *.xml *.html *.xhtml *.svg
comment = Check with upstream why they are storing binary data in plain text form.
command = grep -nHoP 'data:image/[a-z0-9]*;base64,.{{20}}' {files}

[cpuinfo]
comment = Parsing /proc/cpuinfo is not portable at all, use /sys instead.
command = grep -nHrF /proc/cpuinfo {cwd}

[readme-install]
comment = Users of binary packages do not need install instructions.
files = *README*
not-files = README.md README.rst README.install
command = grep -nHiF install {files}

[autoupdate]
flags = modify
debian = autoconf
files = configure.ac configure.in
command = autoupdate
comment = Overwrites configure.ac (https://bugs.debian.org/776559)

[autoscan]
flags = modify
debian = autoconf
files = configure.ac configure.in
command = autoscan
comment = Overwrites autom4te.cache/ autoscan.log configure.scan (https://bugs.debian.org/818572)

[empty]
types = inode/x-empty
command = find {cwd} \( -name .git -o -name .svn -o -name .bzr -o -name CVS -o -name .hg -o -name _darcs -o -name _FOSSIL_ -o -name .sgdrawer -o -name .pc \) -prune -o -empty -print

[todo]
command = grep -nHriE 'fixme|todo|hack|xxx+|broken' {cwd}

[isutf8]
debian = moreutils
not-dirs = .git .svn .bzr CVS .hg _darcs _FOSSIL_ .sgdrawer .pc
flags = fixme fixme-ignore
comment = A recursive option needs to be implemented (https://bugs.debian.org/780197)
not-files =
 *.blend
 *.icns *.bmp *.ico *.png *.gif *.jpg *.jpeg *.tga *.xcf *.tif *.tiff *.exr *.hdr *.webp
 *.mo *.gmo
 *.gz *.bz2 *.xz *.lz *.zip *.tar *.deb
 *.pdf *.odt *.docx *.doc
 *.chm
 *.torrent
 *.pyc *.pyo *.o *.so *.so.* *.debug
 *.wav *.ogg *.oga *.ogv *.mid *.mp3 *.flac
 *.webm *.mov *.avi *.mkv *.wmv *.mp4
 *.ttf *.otf *.fon *.eot *.woff *.woff2
 *.pgp *.gpg
 *.dat
 *.swp
 *.bin
 *.rsrc
 .DS_Store
types = text/*
command = isutf8 {files}

[disabled-tests]
command = grep -nHriEC1 '((check|test) *\|\| *true|-dh_auto_test)' {cwd}

[timeless]
comment = Prevents reproducible builds: https://reproducible-builds.org/
command = grep -nHrE '__DATE__|__TIME__|__TIMESTAMP__' {cwd}

[project-flint]
flags = todo
comment = https://bugs.debian.org/809042 https://github.com/pengwynn/flint

[http]
comment = check if these can be switched to https://
command = grep -nHrF http: {cwd}

[embed-readme]
flags = embed
files = *README*
comment = Please check if these README files belong to embedded code/data copies.
command = find {cwd} -mindepth 2 -iname '*README*'

[embed-dirs]
flags = embed
comment = Please check if these directories contain embedded code/data copies.
command = find {cwd} -type d -name 'vendor*' -o -iname '*rd*party' -o -iname 3rdp -o -name contrib -o -name imports -o -name node_modules -o -iname external -o -iname externals -o -iname deps -o -name inc

[mailto]
comment = As per RFC 6068, there should be no slashes after "mailto:".
command = grep -nHrF mailto:/ {cwd}

# TODO: detox
# TODO: EC2_SECRET_KEY
# TODO: curl -k --insecure
# TODO: wget --no-check-certificate
# TODO: svn --trust-server-cert
# TODO: bogomips
# TODO: ripper
# TODO: rmlint
# TODO: fslint
# TODO: similarity-tester sim_text
# TODO: https://github.com/coala/coala
# TODO: https://github.com/nexB/scancode-toolkit/
# TODO: https://github.com/jeremylong/DependencyCheck/
# TODO: http://www.coding-guidelines.com/numbers/
# TODO: ebnflint
# TODO: https://fbinfer.com/ https://bugs.debian.org/789059
# TODO: https://research.fb.com/inferbo-infer-based-buffer-overrun-analyzer/
# TODO: https://github.com/facebook/pfff/wiki/Scheck
# TODO: http://jwilk.net/software/urlycue
# TODO: https://github.com/dlenski/wtf
# TODO: https://marc-stevens.nl/research/software/download.php?file=libdetectcoll-0.2.zip
# TODO: https://github.com/cr-marcstevens/sha1collisiondetection
# TODO: https://github.com/dxa4481/truffleHog
# TODO: https://git.fsfe.org/reuse/tool
# TODO: https://github.com/DavidJacobson/SafeText
# TODO: https://github.com/OpenNewsLabs/open-project-linter
